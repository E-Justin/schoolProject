/* Write a function called clockKeeper() that takes as its argument a dateAndTime
structure as defined in this chapter. The function should call the timeUpdate() function, and if the time 
reaches midnight, the function should call the dateUpdate function to switch over
to the next day. Have the function return the updated dateAndTime structure.
** it should also account for end of month, end of year, and leap years. */

#include <stdio.h>
#include <stdbool.h>
#include <windows.management.update.h>




#include <stdio.h>
#include <stdbool.h>

struct date
{
	int month;
	int day;
	int year;
};

struct time
{
	int hour;
	int minutes;
	int seconds;
};

struct date today, tomorrow;

const int daysPerMonth[12] =
{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };



struct date dateUpdate(struct date today)	// function to switch date over to tomorrow
{
	struct date tomorrow;
	int numberOfDays(struct date d);

	if (today.day != numberOfDays(today))
	{
		tomorrow.day = today.day + 1;
		tomorrow.month = today.month;
		tomorrow.year = today.year;
	}
	else if (today.month == 12)
	{
		tomorrow.day = 1;
		tomorrow.month = 1;
		tomorrow.year = today.year + 1;
	}
	else
	{
		tomorrow.day = 1;
		tomorrow.month = today.month + 1;
		tomorrow.year = today.year;
	}

	return tomorrow;
}

int numberOfDays(struct date d)	// function to determine the number of days in a month
{
	int days;
	bool isLeapYear(struct date d);
	const int daysPerMonth[12] =
	{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

	if (isLeapYear(d) && d.month == 2)
		days = 29;
	else
		days = daysPerMonth[d.month - 1];

	return days;

}

bool isLeapYear(struct date d)		// function to determine if it is a leap year
{
	bool leapYearFlag;

	if ((d.year % 4 == 0 && d.year % 100 != 0) || d.year % 400 == 0)
		leapYearFlag = true;	// leap year
	else
		leapYearFlag = false;	// no leap year
	return leapYearFlag;
}

struct time timeUpdate(struct time now)	// function to update the time by one second
{
	++now.seconds;

	if (now.seconds == 60)	// next minute
	{
		now.seconds = 0;
		++now.minutes;


		if (now.minutes == 60)	// next hour
		{
			now.minutes = 0;
			++now.hour;

			if (now.hour == 24)		// midnight
				now.hour = 0;
		}
	}

	return now;
}

int main(void)
{
	
	struct date dateUpdate(struct date today);
	struct date thisDay, nextDay;
	struct time timeUpdate(struct time now);
	struct time currentTime, nextTime;

	printf("Enter today's date (mm dd yyyy): ");
	scanf_s("%i%i%i", &thisDay.month, &thisDay.day, &thisDay.year);

	printf("Enter the time (hh:mm:ss) : ");
	scanf_s("%i:%i:%i", &currentTime.hour, &currentTime.minutes, &currentTime.seconds);

	nextTime = timeUpdate(currentTime);

	nextDay = dateUpdate(thisDay);



	printf("The updated time is %.2i:%.2i:%.2i\n", nextTime.hour, nextTime.minutes, nextTime.seconds);


	printf("Tomorrow's date is %i/%i/%.2i.\n", nextDay.month, nextDay.day, nextDay.year % 100);



	return 0;
}
