int entries = 10;

struct entry

{

	char word[15];

	char definition[50];

};

struct entry dictionary[100] =

{ { "aardvark", "a burrowing African mammal" },

{ "abyss", "a bottomless pit" },

{ "acumen", "mentally sharp; keen" },

{ "addle", "to become confused" },

{ "aerie", "a high nest" },

{ "affix", "to append; attach" },

{ "agar", "a jelly made from seaweed" },

{ "ahoy", "a nautical call of greeting" },

{ "aigrette", "an ornamental cluster of feathers" },

{ "ajar", "partially opened" }

};

struct dictionary dictionarySort(struct dictionary temp[15])
{
	int i, j;
	int a = 0;
	for (i = 0; i < entries - 1; ++i)
	{
		for (j = i + 1; j < entries; ++j)
		{

			if (dictionary[i].word[a] == dictionary[j].word[a])
			{
				++a;
			}
			if (dictionary[i].word[a] > dictionary[j].word[a])
			{
				temp[i] = dictionary[i];
				dictionary[i] = dictionary[j];
				dictionary[j] = temp[i];
				++a
			}


		}
	}
	for (i = 0; i < entries; i++)
	{
		printf("%s\n", dictionary[i].word);
	}

	return struct dictionary;
}


int main(void)
{
	
	

	


	
	
	
	


	

	

	return 0;
}
