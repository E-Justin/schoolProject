// This program should read and display contents of a file, one line at a time.
// it should then convert each line to its ASCII value + 6 
// then it should write the encrypted code ( with the same formatting to a coded.txt file)
#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>
#include <cctype>
using namespace std;

int main()
{

    string contents;                    // string to hold contents of file
    string copy;                        // string to copy the entire file to, one line at a time
    string coded;

    fstream inputFile;
    inputFile.open("plain.txt");        // opens file for reading


    if (inputFile)      // Assuming file is opened correctly, loop begins
    {

        getline(inputFile, contents, '\n');     
        cout << contents << endl;               // for some reason, I had to start with this in order for it to copy the first line from the file
        
        copy = contents + '\n';                        // transfers to another variable to hold the entire file's contents

        while (inputFile >> contents)       // loop to read from file until it reaches the end
        {
           

            getline(inputFile, contents, '\n');
            cout << contents << endl;               // gets the next line, and so on

            copy += contents + '\n';                // copies each line to the copy variable until it holds the entire file.
        }
        cout << "The copy variable holds :" << endl << copy;
        inputFile.close();  // closes the file
        
    }
    int length = copy.length();                     // gets the length of the data copied from the plain text file.
    for (int index = 0; index < length; index++)    // loops through each character until index is greater than length
    {
        coded = copy[index] + 6;            // encrypts code to add 6 to each character
    }
    ofstream outputFile;                
    outputFile.open("coded.txt");   // opens file for writing

    outputFile <<" The encrypted file contains: " << endl << coded;

    outputFile.close(); // closes file

    return 0;
}
